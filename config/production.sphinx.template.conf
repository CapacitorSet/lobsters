
indexer
{
}

searchd
{
  listen = 127.0.0.1:9306:mysql41
  log = /gambero/log/production.searchd.log
  query_log = /gambero/log/production.searchd.query.log
  pid_file = /gambero/log/production.sphinx.pid
  workers = threads
  binlog_path = /tmp/binlog/production
}

source comment_core_0
{
  type = mysql
  sql_host = db
  sql_user = ${MYSQL_USER}
  sql_pass = ${MYSQL_PASSWORD}
  sql_db = ${MYSQL_DATABASE}
  sql_port = 3306
  sql_query_pre = SET TIME_ZONE = '+0:00'
  sql_query = SELECT SQL_NO_CACHE `comments`.`id` * 4 + 0 AS `id`, `comments`.`comment` AS `comment`, `comments`.`short_id` AS `short_id`, `users`.`username` AS `author`, `comments`.`id` AS `sphinx_internal_id`, 'Comment' AS `sphinx_internal_class`, 0 AS `sphinx_deleted`, (CAST(upvotes AS signed) - CAST(downvotes AS signed)) AS `score`, `comments`.`is_deleted` AS `is_deleted`, UNIX_TIMESTAMP(`comments`.`created_at`) AS `created_at` FROM `comments` LEFT OUTER JOIN `users` ON `users`.`id` = `comments`.`user_id` WHERE (`comments`.`id` BETWEEN $start AND $end AND `comments`.`is_deleted` = 0 AND `comments`.`is_moderated` = 0) GROUP BY `comments`.`id`, `comments`.`comment`, `comments`.`short_id`, `users`.`username`, `comments`.`id`, `comments`.`is_deleted`, `comments`.`created_at`  ORDER BY NULL
  sql_query_range = SELECT IFNULL(MIN(`comments`.`id`), 1), IFNULL(MAX(`comments`.`id`), 1) FROM `comments`
  sql_attr_uint = sphinx_internal_id
  sql_attr_uint = sphinx_deleted
  sql_attr_bool = is_deleted
  sql_attr_bigint = score
  sql_attr_timestamp = created_at
  sql_attr_string = sphinx_internal_class
}

index comment_core
{
  type = plain
  path = /sphinx/production/comment_core
  docinfo = extern
  source = comment_core_0
}

source story_core_0
{
  type = mysql
  sql_host = db
  sql_user = ${MYSQL_USER}
  sql_pass = ${MYSQL_PASSWORD}
  sql_db = ${MYSQL_DATABASE}
  sql_port = 3306
  sql_query_pre = SET TIME_ZONE = '+0:00'
  sql_query = SELECT SQL_NO_CACHE `stories`.`id` * 4 + 1 AS `id`, `stories`.`description` AS `description`, `stories`.`short_id` AS `short_id`, GROUP_CONCAT(DISTINCT `tags`.`tag` SEPARATOR ' ') AS `tags`, `stories`.`title` AS `title`, `stories`.`url` AS `url`, `users`.`username` AS `author`, `stories`.`story_cache` AS `story_cache`, `stories`.`id` AS `sphinx_internal_id`, 'Story' AS `sphinx_internal_class`, 0 AS `sphinx_deleted`, UNIX_TIMESTAMP(`stories`.`created_at`) AS `created_at`, `stories`.`hotness` AS `hotness`, `stories`.`is_expired` AS `is_expired`, (CAST(upvotes AS signed) - CAST(downvotes AS signed)) AS `score`, `stories`.`id` AS `story_id` FROM `stories` LEFT OUTER JOIN `taggings` ON `taggings`.`story_id` = `stories`.`id` LEFT OUTER JOIN `tags` ON `tags`.`id` = `taggings`.`tag_id` LEFT OUTER JOIN `users` ON `users`.`id` = `stories`.`user_id` WHERE (`stories`.`id` BETWEEN $start AND $end AND `stories`.`is_expired` = 0) GROUP BY `stories`.`id`, `stories`.`description`, `stories`.`short_id`, `stories`.`title`, `stories`.`url`, `users`.`username`, `stories`.`story_cache`, `stories`.`id`, `stories`.`created_at`, `stories`.`hotness`, `stories`.`is_expired`, `stories`.`id`  ORDER BY NULL
  sql_query_range = SELECT IFNULL(MIN(`stories`.`id`), 1), IFNULL(MAX(`stories`.`id`), 1) FROM `stories`
  sql_attr_uint = sphinx_internal_id
  sql_attr_uint = sphinx_deleted
  sql_attr_uint = story_id
  sql_attr_bool = is_expired
  sql_attr_bigint = score
  sql_attr_timestamp = created_at
  sql_attr_float = hotness
  sql_attr_string = sphinx_internal_class
}

index story_core
{
  type = plain
  path = /sphinx/production/story_core
  docinfo = extern
  source = story_core_0
}

index comment
{
  type = distributed
  local = comment_core
}

index story
{
  type = distributed
  local = story_core
}
